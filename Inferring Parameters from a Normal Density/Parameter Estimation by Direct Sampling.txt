### Estimating unknown parameters from a normal distribution by
### sampling directly from marginal density
First, we will generate 25,000 sigsq realizations from the theoretical marginal distribution of sigsq, 
and then use these to generate 25,000 mu realizations from the full conditional distribution for mu.

sigsq = NULL ### Theoretical marginal distribution is sigsq ~ IG(21, 21*var(y))
mu = NULL ### Full conditional marginal distribution mu ~ N(mean(y), (1/43)*sigsq)
y_bar = NULL
y_predict = NULL 

y = c(18.37930974926,
      4.88775310805306,
      9.50779761872122,
      6.83170872950577,
      14.0451777084016,
      9.32029557692764,
      14.0079926077951,
      8.53302217987935,
      6.95393209803018,
      3.03074316210239,
      10.4083360812306,
      8.22284414772784,
      4.12509880293995,
      9.7117698260924,
      21.0780754314079,
      12.2519551323014,
      12.5247940712691,
      6.11836165872085,
      15.6630942461564,
      8.50590231202507,
      4.76266018941267,
      6.20306721693455,
      9.95393097751635,
      17.7973510355918,
      6.84219798016638,
      6.57420551490494,
      22.7842827876003,
      15.2556282189003,
      11.7811389512726,
      0.279915902096447,
      5.25164382507256,
      13.7971443074177,
      14.8110886466859,
      4.34927835440196,
      11.1507334981378,
      20.7310550973808,
      14.9635099745567,
      10.4880578789661,
      11.4768127984974,
      13.0425070862254,
      15.541956331673,
      12.8646032139891,
      9.9634905595079)
y_bar = mean(y)

for(i in 1:25000) {  
  sigsq[i] = 1/(rgamma(1, 21, (21*var(y)))) ### Generates a vector of sigsq values
  mu[i] = rnorm(y_bar, (sigsq[i]/43)) ### Generates a vector of mu values
}

y_predict =  abs(rnorm(25000, mu, sqrt(sigsq))) ### Generates a vector of predicted y-values from N(mu[i], sigsq[i])  

### Part a 
Now, we use the 25,000 predicted y-values to find the probability that the 44th observation will be greater than 10.

length(y_predict[y_predict  > 10])/25000
[1] 0.0624375

Thus, the chance that the 44th observation is greater than 10 is about 6.24%.

### Part b
Next, we use the built-in quantile function to find the shrotest interval that has a 95% chance of containing 
the next observation.

quantile(y_predict, probs= c(.025,.975), na.rm=TRUE)
     2.5%    97.5% 
 0.1631193 12.1722258 

Thus, the shortest interval that has a 95% chance of containing the 44th observation is [0.163, 12.172].
